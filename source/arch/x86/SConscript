#
# SPDX-FileCopyrightText: (C) Alex Smith <alex@alex-smith.me.uk>
# SPDX-License-Identifier: ISC
#

Import('config', 'env')
from util import FeatureSources

sources = FeatureSources(config, [
    'loader/kboot.c',
    'loader/kboot_enter.S',
    'loader/linux.c',
    'loader/multiboot.c',
    'loader/multiboot_enter.S',

    'arch.c',
    'backtrace.c',
    'descriptor.c',
    'entry.S',
    'exception.c',
    'mmu.c',
    'time.c',
])

# Set 64-/32-bit-specific flags.
if config['64BIT']:
    env['CCFLAGS'] += ['-m64', '-mcmodel=small', '-mno-red-zone']
    env['ASFLAGS'] += ['-m64']
    env['LINKFLAGS'] += ['-m64', '$NO_PIE']
else:
    env['CCFLAGS'] += ['-m32']
    env['ASFLAGS'] += ['-m32']
    env['LINKFLAGS'] += ['-m32', '$NO_PIE']

    # 32-bit needs some support functions from compiler-rt.
    sources += map(lambda x : File('../../lib/runtime/' + x), [
        'i386/udivdi3.S',
        'i386/umoddi3.S',
        'i386/divdi3.S',
        'i386/moddi3.S',
        'udivmoddi4.c',
    ])

# Prevent FPU code generation.
env['CCFLAGS'] += ['-mno-sse', '-mno-mmx', '-mno-sse2', '-mno-3dnow']

# Warn on stack frames that are too large.
env['CCFLAGS'] += ['-Wframe-larger-than=512', '-Wno-address-of-packed-member']

# Default page size may be larger which can result in a large output binary.
env['LINKFLAGS'] += ['-Wl,-z,max-page-size=0x1000', '-Wl,-z,common-page-size=0x1000']

Return('sources')
