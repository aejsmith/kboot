#
# Copyright (C) 2009-2021 Alex Smith
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

vars = ['config', 'env']

Import(*vars)
from util import FeatureSources

sources = FeatureSources(config, [
    'loader/efi.c',
    'loader/kboot.c',

    'console.c',
    'device.c',
    'disk.c',
    'memory.c',
    'net.c',
    'platform.c',
    'services.c',
    'video.c',
])

# Add architecture-specific headers.
env['CPPPATH'] += [Dir('arch/%s/include' % (config['EFI_ARCH']))]

# Get architecture-specific sources.
arch_sources = SConscript(dirs = ['arch/' + config['EFI_ARCH']], exports = vars)
sources = arch_sources + sources

# EFI uses UCS-2 strings.
env['CCFLAGS'] += ['-fshort-wchar']

# We build the loader as a relocatable ELF shared library, and then convert
# that into a PE binary for use with EFI. On IA32 we don't actually compile as
# PIC, but by compiling as a shared library we are relocatable.
env['LINKFLAGS'] += [
    '-Wl,-Bsymbolic', '-Wl,-shared', '-Wl,-znocombreloc', '-Wl,--no-undefined'
]

Return('sources')
